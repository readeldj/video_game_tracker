#!/usr/bin/env ruby
require 'highline/import'

Dir["./app/**/*.rb"].each { |f| require f }
Dir["./lib/*.rb"].each { |f| require f }



def main_menu
  loop do
    say "\n***  Main Menu  ***"
    choose do |menu|
      menu.prompt = ""
      games_controller = GamesController.new

      menu.choice('List Owned Games - owned') do
          say (games_controller.index)
      end

      menu.choice('List Wanted Games - wanted') { say("") }
      menu.choice('Manage DB - manage') do
        manage_menu
      end
      menu.choice('Exit') do
        say("Later!\n")
        exit
      end
    end
  end
end


def manage_menu
  loop do
    say "\n***  Manage Menu  ***"
    choose do |menu|
      menu.prompt = ""
      games_controller = GamesController.new

      menu.choice('Add A Game') do
        add_game
      end

      menu.choice('Update A Game') do
        games_controller.edit
        # say (games_controller.index)
        # exit
      end

      menu.choice('Delete A Game') do
        games_controller.delete
        # say (games_controller.index)
        # game = ask ("\nName that game\n")
        # response = games_controller.delete(game)
        # say(response)
      end

      menu.choice('List All Games') do
        say (games_controller.index)
      end

      menu.choice('Exit') do
        say("Later!\n")
        exit
      end
    end
  end
end

def add_game
  games_controller = GamesController.new
  loop do
    game_name = ask ("\n** What game would you like to add? **")
    game_system = ask "\n** Enter Game System Type By Choosing One Of The Following **\n" +
    "1. Wii U\n" +
    "2. XBox 360\n" +
    "3. Play Station 3\n" +
    "4. iOS (iPad or iPhone)\n" +
    "5. Windows OS\n" +
    "6. Mac OS X\n" +
    "7. Nintendo DS\n" +
    "8. Wii\n"
    game_maturity = ask "\n** Enter Game Maturity Rating **\n" +
    "1. eC - Early Childhood\n" +
    "2. E - Everyone\n" +
    "3. 10+ E - Everyone 10+\n" +
    "4. T - Teen\n" +
    "5. M - Mature 17+\n" +
    "6. Ao - Adults Only 18+\n" +
    "7. RP - Rating Pending\n"
    game_player_style = ask "\n** Enter Game Player Style **\n" +
    "1. Single Player\n" +
    "2. MultiPlayer\n" +
    "3. MultiPlayer/Online\n"
    game_ownership = ask "\n** Ownership Status **\n" +
    "1. Owned\n" +
    "2. Wanted\n"
    response = games_controller.add(game_name, game_system, game_maturity, game_player_style, game_ownership)
    say(response) unless response.nil?
    if /has\sbeen\sadded$/.match(response)
      break
    end
  end
  return
end

if ARGV.length == 0
  main_menu()

elsif ARGV.length == 1 # We haven't enabled this yet, but the args work.
  if ARGV[0] != 'owned' && ARGV[0] != 'wanted' && ARGV[0] != 'manage'
    print "[Help] Run as: ./video_game_tracker  with no arguements"
  elsif ARGV[0] == 'manage'
    manage_menu
  end
end